@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SpeedMaint</title>
    <script src="~/js/jquery.js"></script>
    <script src="js/mUtils.js"></script>
    <link href="lastest/mapbox-gl.css" rel="stylesheet" />
    <link href="~/resources/css/mapbox-gl-geocoder.css" rel="stylesheet" />

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="~/js/daterangepicker.css" rel="stylesheet" />
    <link href="~/layout.css" rel="stylesheet" />
    <link href="resources/css/Item.css" rel="stylesheet" />
    <link href="resources/css/mapbox-gl-draw.css" rel="stylesheet" />
    <link href="~/css/toastr.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <script type="text/javascript">
        var Ext = Ext || {}; // Ext namespace won't be defined yet...

        // This function is called by the Microloader after it has performed basic
        // device detection. The results are provided in the "tags" object. You can
        // use these tags here or even add custom tags. These can be used by platform
        // filters in your manifest or by platformConfig expressions in your app.
        //
        Ext.beforeLoad = function (tags) {
            var s = location.search,  // the query string (ex "?foo=1&bar")
                profile;

            // For testing look for "?classic" or "?modern" in the URL to override
            // device detection default.
            //
            if (s.match(/\bclassic\b/)) {
                profile = 'classic';
            }
            else if (s.match(/\bmodern\b/)) {
                profile = 'modern';
            }
            // uncomment this if you have added native build profiles to your app.json
            /*else if (tags.webview) {
                if (tags.ios) {
                    profile = 'ios';
                }
                // add other native platforms here
            }*/
            else {
                //profile = tags.desktop ? 'classic' : 'modern';
                profile = tags.phone ? 'modern' : 'classic';
            }

            Ext.manifest = profile; // this name must match a build profile name
        };
    </script>


    <!-- The line below must be kept intact for Sencha Cmd to build your application -->
    <script id="microloader" type="text/javascript" src="bootstrap.js"></script>
    <script src="lastest/mapbox-gl.js"></script>
    <script src="lastest/ekmap-mapboxgl.js"></script>
    <script src="lastest/common.js"></script>
    @*<script src="~/js/jquery.js"></script>*@
    <script src="resources/js/mapbox-gl-geocoder.min.js"></script>
    <script src="~/js/daterangepicker.js"></script>
    <script src="~/js/moment.min.js"></script>
    <script src="~/js/chart.js"></script>
    <script src="~/js/date.js"></script>
    @*<script src="js/mUtils.js"></script>*@
    @*<script src="~/js/sweetalert.js"></script>*@
    <script src="~/js/sweetalert2@10.js"></script>
    <script src="~/js/toastr.min.js"></script>
    <script src="~/js/qrcode.min.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
